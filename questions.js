//Create all questions
export const allQuestions = [{
        id: 0,
        question: "La méthode qui fait écouter un événement en JavaScript est ?",
        questionNumber: "Question 1/15",
        goodAnswer: "addEventListener",
        responses: [
            "eventListener",
            "executeEvent",
            "addEventListener",
            "function() Listener{}",
        ],
    },
    {
        id: 1,
        question: "Quel est le type d'un fichier JavaScript ?",
        questionNumber: "Question 2/15",
        goodAnswer: ".js",
        responses: [".ts", ".j", ".jsx", ".js"],
    },
    {
        id: 2,
        question: "Quelle est la méthode qui supprime le dernier élément d'un tableau et retourne cet élément ?",
        questionNumber: "Question 3/15",
        goodAnswer: "pop()",
        responses: ["pop()", "push()", "shift()", "unshift()"],
    },
    {
        id: 3,
        question: "Lequel des ces quatre types de données n'est pas primitif en JavaScript ?",
        questionNumber: "Question 4/15",
        goodAnswer: "array",
        responses: ["number", "string", "boolean", "array"],
    },
    {
        id: 4,
        question: "Une des ces conditions retourne un boolean false, laquelle ?",
        questionNumber: "Question 5/15",
        goodAnswer: 'if(1==="1")',
        responses: ["if(1==1)", 'if(1=="1")', "if(1===1)", 'if(1==="1")'],
    },
    {
        id: 5,
        question: "Quelle phrase ci-dessous est vraie au sujet de constante ?",
        questionNumber: "Question 6/15",
        goodAnswer: "une fois déclarée, sa valeur ne peut être changée",
        responses: [
            "on peut déclarer une constante sans l'initialiser",
            "son type peut être modifié après déclaration",
            "une fois déclarée, sa valeur ne peut être changée",
            "sa valeur n'est jamais concaténée",
        ],
    },
    {
        id: 6,
        question: "En JavaScript, un objet est déclaré comme une liste de paires clé/valeur entre ...",
        questionNumber: "Question 7/15",
        goodAnswer: "{} accolades",
        responses: [
            "[] crochets",
            "() parenthèses",
            "{} accolades",
            "aucune des réponses ci-dessus",
        ],
    },
    {
        id: 7,
        question: "Comment feriez-vous pour calculer le nombre d'éléments dans l'array onlineUsers ?",
        questionNumber: "Question 8/15",
        goodAnswer: "let numberOfUsers = onlineUsers.length;",
        responses: [
            "let numberOfUsers = onlineUsers.length;",
            "let numberOfUsers = onlineUsers.size;",
            "let numberOfUsers = onlineUsers.quantity;",
            "let numberOfUsers = onlineUsers.index;",
        ],
    },
    {
        id: 8,
        question: "Qu'est-ce que le DOM ?",
        questionNumber: "Question 9/15",
        goodAnswer: "une API qui permet d'accéder aux éléments HTML",
        responses: [
            "une API qui permet d'accéder aux éléments HTML",
            "un pays d'outre-mer",
            "une API pour faire des requêtes à un serveur web",
            "un nouveau langage de programmation",
        ],
    },
    {
        id: 9,
        question: 'Que permet de rechercher cet extrait ? //document.getElementById("my-list")',
        questionNumber: "Question 10/15",
        goodAnswer: 'l\'élément ayant pour ID "my-list"',
        responses: [
            'l\'élément ayant pour ID "my-list"',
            'tous les éléments ayant pour nom "my-list"',
            'tous les éléments ayant pour classe "my-list"',
            "aucune bonne réponse",
        ],
    },
    {
        id: 10,
        question: 'Que permet de faire cet extrait ? //element.innerHTML = "<strong>Salut !</strong>;"',
        questionNumber: "Question 11/15",
        goodAnswer: "modifier le contenu de element sous forme de HTML",
        responses: [
            "ce code affichera une erreur",
            "modifier le contenu de element sous forme de HTML",
            "modifier le contenu de element sous forme de texte",
            'remplacer element par le contenu HTML "<strong>"',
        ],
    },
    {
        id: 11,
        question: 'Que fait cet extrait ? //element.classList.add("hello")',
        questionNumber: "Question 12/15",
        goodAnswer: 'il ajoute la classe "hello" à element',
        responses: [
            'il supprime la classe "hello" à element',
            'il remplace la classe de element par "hello"',
            "aucune bonne réponse",
            'il ajoute la classe "hello" à element',
        ],
    },
    {
        id: 12,
        question: "Que fait cet extrait ? //JSON.parse(value)",
        questionNumber: "Question 13/15",
        goodAnswer: "il transforme un contenu JSON en objet JavaScript",
        responses: [
            "il transforme un objet JavaScript en contenu JSON",
            "il transforme un contenu JSON en objet JavaScript",
            "la méthode parse() n'existe pas",
            "il transforme un objet JavaScript en string",
        ],
    },
    {
        id: 13,
        question: 'Comment sera traité ce champ ? //<input type="email" required />',
        questionNumber: "Question 14/15",
        goodAnswer: "il sera obligatoire et devra être au format e-mail",
        responses: [
            "il sera obligatoire mais pourra contenir n'importe quoi",
            "il sera obligatoire et devra être au format e-mail",
            "il n'est pas obligatoire mais doit contenir un e-mail",
            "il n'est obligatoire que s'il contient une adresse e-mail",
        ],
    },
    {
        id: 14,
        question: "Que fait cette ligne de code ? //setInterval(callback, 1000)",
        questionNumber: "Question 15/15",
        goodAnswer: "il exécute la callback toutes les 1 seconde",
        responses: [
            "il exécute la callback au bout de 1 seconde",
            "il exécute la callback toutes les 1 seconde",
            "il exécute la callback au bout de 1000 secondes",
            "il exécute la callback toutes les 1000 secondes",
        ],
    },
];
//Object.freeze to prevent data mutation.
Object.freeze(allQuestions);